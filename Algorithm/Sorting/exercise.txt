1 - Sort 10 schools around your house by distance: 
10 is not large number. so time complexity is not an issue. and it could be nearly sorted.
insertion. simple, O(1) space complexity,

2 - eBay sorts listings by the current Bid amount:
radix or counting sort. -> 1 dollar to 100 dollars.(integers)
-> all are numbers to be sorted.

3 - Sport scores on ESPN: 
Quick sort: lower space complexity than merge sort.


4 - Massive database (can't fit all into memory) needs to sort through past year's user data:  
merge sort: best O(nlogn) even in worst case(massive database).


5 - Almost sorted Udemy review data needs to update and add 2 new reviews: 
Insertion sort: previous data is already sorted and only 2 new data are not sorted.

6 - Temperature Records for the past 50 years in Canada:
radix or counting sort. 
if data is not integer, quick sort.

7 - Large user name database needs to be sorted. Data is very random: 
Merge sort: if memory is fine.(use enough space)
Quick sort: if worst case doesn't happen, save space.


8 - You want to teach sorting for the first time: Bubble or selection sort.